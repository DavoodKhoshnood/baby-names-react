{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/GitHub/baby-names-react/src/BabiesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BabiesList = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const [state, setstate] = useState(\"all\");\n  const [babyNames, setFilter] = useState(props.BabyNames.sort((a, b) => a.name.localeCompare(b.name)));\n\n  const filter = e => {\n    state === \"all\" ? setFilter(props.BabyNames.filter(baby => baby.name.toLowerCase().includes(e.target.value.toLowerCase()))) : setFilter(props.BabyNames.filter(baby => baby.name.toLowerCase().includes(e.target.value.toLowerCase()) && baby.sex === state));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Search...\",\n        onKeyUp: e => filter(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: list.map((baby, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: baby.sex === 'f' ? 'girl' : 'boy',\n        children: baby.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BabiesList, \"7j9cIZwHUGbQG//LmRZGmR8OQCk=\");\n\n_c = BabiesList;\nexport default BabiesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BabiesList\");","map":{"version":3,"sources":["/home/user/Documents/GitHub/baby-names-react/src/BabiesList.js"],"names":["React","useState","BabiesList","props","state","setstate","babyNames","setFilter","BabyNames","sort","a","b","name","localeCompare","filter","e","baby","toLowerCase","includes","target","value","sex","list","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,UAAU,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,SAAZ,IAAyBN,QAAQ,CAACE,KAAK,CAACK,SAAN,CAAgBC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAA/B,CAAD,CAAvC;;AACA,QAAME,MAAM,GAAIC,CAAD,IAAO;AACpBX,IAAAA,KAAK,KAAK,KAAV,GAAkBG,SAAS,CAACJ,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAuBE,IAAI,IAAIA,IAAI,CAACJ,IAAL,CAAUK,WAAV,GAAwBC,QAAxB,CAAiCH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeH,WAAf,EAAjC,CAA/B,CAAD,CAA3B,GACEV,SAAS,CAACJ,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAuBE,IAAI,IAAIA,IAAI,CAACJ,IAAL,CAAUK,WAAV,GAAwBC,QAAxB,CAAiCH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeH,WAAf,EAAjC,KAAkED,IAAI,CAACK,GAAL,KAAajB,KAA9G,CAAD,CADX;AAED,GAHD;;AAIA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACA;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,OAAO,EAAGW,CAAD,IAAKD,MAAM,CAACC,CAAD;AAJtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA,eASA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGO,IAAI,CAACC,GAAL,CAAS,CAACP,IAAD,EAAOQ,KAAP,kBACR;AAAkB,QAAA,SAAS,EAAER,IAAI,CAACK,GAAL,KAAa,GAAb,GAAmB,MAAnB,GAA4B,KAAzD;AAAA,kBACGL,IAAI,CAACJ;AADR,SAAWY,KAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADF;AAmBD,CA1BD;;GAAMtB,U;;KAAAA,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst BabiesList = ({props}) => {\n  const [state, setstate] = useState(\"all\")\n  const [babyNames, setFilter] = useState(props.BabyNames.sort((a, b) => a.name.localeCompare(b.name)));\n  const filter = (e) => {\n    state === \"all\" ? setFilter(props.BabyNames.filter(baby => baby.name.toLowerCase().includes(e.target.value.toLowerCase()))) :\n      setFilter(props.BabyNames.filter(baby => baby.name.toLowerCase().includes(e.target.value.toLowerCase()) && baby.sex === state ));\n  };\n  return (\n    <>\n    <div className=\"content\">\n    <input\n      className=\"form-control\"\n      type=\"text\"\n      placeholder=\"Search...\"\n      onKeyUp={(e)=>filter(e)}\n    />\n  </div>\n    <div className=\"content\">\n      {list.map((baby, index) => (\n        <span key={index} className={baby.sex === 'f' ? 'girl' : 'boy'}>\n          {baby.name}\n        </span>\n      ))}\n    </div>\n    </>\n  )\n}\n\nexport default BabiesList\n"]},"metadata":{},"sourceType":"module"}